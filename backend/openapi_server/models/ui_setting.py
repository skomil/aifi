# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class UiSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, label=None, hidden=None, data_type=None, ui_type=None, default_value=None, initial_value=None):  # noqa: E501
        """UiSetting - a model defined in OpenAPI

        :param id: The id of this UiSetting.  # noqa: E501
        :type id: str
        :param label: The label of this UiSetting.  # noqa: E501
        :type label: str
        :param hidden: The hidden of this UiSetting.  # noqa: E501
        :type hidden: bool
        :param data_type: The data_type of this UiSetting.  # noqa: E501
        :type data_type: str
        :param ui_type: The ui_type of this UiSetting.  # noqa: E501
        :type ui_type: str
        :param default_value: The default_value of this UiSetting.  # noqa: E501
        :type default_value: object
        :param initial_value: The initial_value of this UiSetting.  # noqa: E501
        :type initial_value: object
        """
        self.openapi_types = {
            'id': str,
            'label': str,
            'hidden': bool,
            'data_type': str,
            'ui_type': str,
            'default_value': object,
            'initial_value': object
        }

        self.attribute_map = {
            'id': 'id',
            'label': 'label',
            'hidden': 'hidden',
            'data_type': 'dataType',
            'ui_type': 'uiType',
            'default_value': 'defaultValue',
            'initial_value': 'initialValue'
        }

        self._id = id
        self._label = label
        self._hidden = hidden
        self._data_type = data_type
        self._ui_type = ui_type
        self._default_value = default_value
        self._initial_value = initial_value

    @classmethod
    def from_dict(cls, dikt) -> 'UiSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UiSetting of this UiSetting.  # noqa: E501
        :rtype: UiSetting
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UiSetting.


        :return: The id of this UiSetting.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UiSetting.


        :param id: The id of this UiSetting.
        :type id: str
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this UiSetting.


        :return: The label of this UiSetting.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this UiSetting.


        :param label: The label of this UiSetting.
        :type label: str
        """

        self._label = label

    @property
    def hidden(self):
        """Gets the hidden of this UiSetting.


        :return: The hidden of this UiSetting.
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this UiSetting.


        :param hidden: The hidden of this UiSetting.
        :type hidden: bool
        """

        self._hidden = hidden

    @property
    def data_type(self):
        """Gets the data_type of this UiSetting.


        :return: The data_type of this UiSetting.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this UiSetting.


        :param data_type: The data_type of this UiSetting.
        :type data_type: str
        """

        self._data_type = data_type

    @property
    def ui_type(self):
        """Gets the ui_type of this UiSetting.


        :return: The ui_type of this UiSetting.
        :rtype: str
        """
        return self._ui_type

    @ui_type.setter
    def ui_type(self, ui_type):
        """Sets the ui_type of this UiSetting.


        :param ui_type: The ui_type of this UiSetting.
        :type ui_type: str
        """

        self._ui_type = ui_type

    @property
    def default_value(self):
        """Gets the default_value of this UiSetting.


        :return: The default_value of this UiSetting.
        :rtype: object
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this UiSetting.


        :param default_value: The default_value of this UiSetting.
        :type default_value: object
        """

        self._default_value = default_value

    @property
    def initial_value(self):
        """Gets the initial_value of this UiSetting.


        :return: The initial_value of this UiSetting.
        :rtype: object
        """
        return self._initial_value

    @initial_value.setter
    def initial_value(self, initial_value):
        """Sets the initial_value of this UiSetting.


        :param initial_value: The initial_value of this UiSetting.
        :type initial_value: object
        """

        self._initial_value = initial_value
