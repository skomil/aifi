# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from gen_api.models.base_model_ import Model
from gen_api import util


class Component(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, input=None, output=None, config=None, ui=None):  # noqa: E501
        """Component - a model defined in OpenAPI

        :param id: The id of this Component.  # noqa: E501
        :type id: str
        :param input: The input of this Component.  # noqa: E501
        :type input: object
        :param output: The output of this Component.  # noqa: E501
        :type output: object
        :param config: The config of this Component.  # noqa: E501
        :type config: object
        :param ui: The ui of this Component.  # noqa: E501
        :type ui: object
        """
        self.openapi_types = {
            'id': str,
            'input': object,
            'output': object,
            'config': object,
            'ui': object
        }

        self.attribute_map = {
            'id': 'id',
            'input': 'input',
            'output': 'output',
            'config': 'config',
            'ui': 'ui'
        }

        self._id = id
        self._input = input
        self._output = output
        self._config = config
        self._ui = ui

    @classmethod
    def from_dict(cls, dikt) -> 'Component':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Component of this Component.  # noqa: E501
        :rtype: Component
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Component.


        :return: The id of this Component.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Component.


        :param id: The id of this Component.
        :type id: str
        """

        self._id = id

    @property
    def input(self):
        """Gets the input of this Component.


        :return: The input of this Component.
        :rtype: object
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this Component.


        :param input: The input of this Component.
        :type input: object
        """

        self._input = input

    @property
    def output(self):
        """Gets the output of this Component.


        :return: The output of this Component.
        :rtype: object
        """
        return self._output

    @output.setter
    def output(self, output):
        """Sets the output of this Component.


        :param output: The output of this Component.
        :type output: object
        """

        self._output = output

    @property
    def config(self):
        """Gets the config of this Component.


        :return: The config of this Component.
        :rtype: object
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this Component.


        :param config: The config of this Component.
        :type config: object
        """

        self._config = config

    @property
    def ui(self):
        """Gets the ui of this Component.


        :return: The ui of this Component.
        :rtype: object
        """
        return self._ui

    @ui.setter
    def ui(self, ui):
        """Sets the ui of this Component.


        :param ui: The ui of this Component.
        :type ui: object
        """

        self._ui = ui
